require('Inspired')

--RecallUlt
--    +
--BaseUlt

PrintChat("RecallUlt + BaseUlt loaded.")
PrintChat("by Noddy")

Config = scriptConfig("RecallUlt", "RecallUlt")
Config.addParam("recallult", "Recall Ult (Beta)", SCRIPT_PARAM_ONOFF, true)
Config.addParam("recalldraw", "Draw Ult Pos", SCRIPT_PARAM_ONOFF, true)
Config.addParam("baseult", "Base Ult", SCRIPT_PARAM_ONOFF, true)

PrintChat("RecallUlt loaded.")

global_ticks = 0
global_ticks1 = 0
global_ticks2 = 0

local target = GetCurrentTarget()
enemyPos2 = GetOrigin(target)

OnLoop (function (myHero)

local myHero = GetMyHero()
local myHeroPos = GetOrigin(myHero)
local target = GetCurrentTarget()

-- Team
if GetTeam(myHero) == 100 then 
	enemyBasePos = Vector(14340, 171, 14390)
elseif GetTeam(myHero) == 200 then 
	enemyBasePos = Vector(400, 200, 400)
end

-- Champ List 
--Ashe
if GetObjectName(myHero) == "Ashe" then 
speedChamp = 1600
speedSpawn = 1600
delay = 250
colision = true
dmg = function(target) return CalcDamage(myHero, target, 0, 175*GetCastLevel(myHero,_R)+ 75 + GetBonusAP(myHero)) end
--Draven
elseif GetObjectName(myHero) == "Draven" then
speedChamp = 2000
speedSpawn = 2000
delay = 400
colision = false
dmg = function(target) return CalcDamage(myHero, target, 0, 60*GetCastLevel(myHero,_R)+ 30 + (0.44*GetBonusDmg(myHero))) end
--Ezreal
elseif GetObjectName(myHero) == "Ezreal" then
speedChamp = 2000
speedSpawn = 2000
delay = 1000
colision = false
dmg = function(target) return CalcDamage(myHero, target, 0, (150*GetCastLevel(myHero,_R)+ 40 + (0.80*GetBonusAP(myHero)) + (0.90*(GetBaseDamage(myHero) + GetBonusDmg(myHero))))) end
-- dmg = function(target) return CalcDamage(myHero, target, 0, 45*GetCastLevel(myHero,_R)+ 60 + (0.27*GetBonusAP(myHero)) + (0.30*GetBonusDMG(myHero))) end
--Jinx
elseif GetObjectName(myHero) == "Jinx" then 
speedChamp = 2000
speedSpawn = (GetDistance(enemyBasePos) / (1 + (GetDistance(enemyBasePos)-1500)/2500))
delay = 600
colision = true
dmg = function(target) return CalcDamage(myHero, target, ((GetMaxHP(target)-GetCurrentHP(target))*(0.2+0.05*GetCastLevel(myHero, _R))) + 100*GetCastLevel(myHero,_R) + 150 + GetBonusDmg(myHero)) end
end

-- RECALL ULT

-- if not IsVisible(target) then
	-- TickerStart = GetTickCount()
-- end

if Config.recallult and ValidTarget(target) and GetCurrentHP(target) < dmg(target) then

-- for i,enemy in pairs(GetEnemyHeroes()) do
	if Config.recallult then
		Ticker = GetTickCount()
		enemyPos1 = GetOrigin(target)
		
		if (global_ticks + 1000) < Ticker then
		DelayAction( function ()
		
			if IsVisible(target)  then
			enemyPos2 = GetOrigin(target)

			end
			end
		,1000)
		
		global_ticks = Ticker
		
		end
			
				x1 = enemyPos2.x - enemyPos1.x
				y1 = enemyPos2.y - enemyPos1.y
				z1 = enemyPos2.z - enemyPos1.z


	end

	
-- Start Timer FOW
Ticker1 = GetTickCount()

	if (global_ticks1) < Ticker1 then
		DelayAction( function ()

			if not IsVisible(target) and GetCurrentHP(target) < dmg(target) then
				-- PrintChat("Start!")
				TickerStart = GetTickCount()
			elseif IsVisible(target) and TickerStart == 0 and GetCurrentHP(target) < dmg(target) then
				-- PrintChat("Start!1")
				TickerStart = 0
			end
			
		 end , 0) 
		global_ticks1 = Ticker1
	
	-- elseif IsVisible(enemy) then
		-- TickerStart = GetTickCount()
		-- PrintChat("Start! Visible!")
	end	

	
	
-- end
end	
-- end

OnProcessRecall(function(Object,recallProc)

if CanUseSpell(myHero,_R) == READY and GetTeam(Object) ~= GetTeam(myHero) and GetCurrentHP(Object) < dmg(Object) and Config.recallult then

-- Ticker2 = GetTickCount()

-- if (global_ticks2) < Ticker2 then
		-- PrintChat("End!")
		TickerEnd = GetTickCount()
		s = TickerEnd - TickerStart
		ssec = s / 1000
		-- global_ticks2 = Ticker2
		
-- end
	
	PrintChat("ssec: "..ssec)
	
	local t = recallProc.totalTime

	local myHeroPos = GetOrigin(myHero)
	local targetPos = GetOrigin(Object)
	
	
		EndPosX = targetPos.x + (-ssec*(x1))
		EndPosY = targetPos.y + (-ssec*(y1))
		EndPosZ = targetPos.z + (-ssec*(z1))
	
	-- PrintChat("TickerStart: "..TickerStart)
	-- PrintChat("TickerEnd: "..TickerEnd)
	-- PrintChat("ssec: "..ssec)
	
	distanceChamp = math.sqrt(math.pow((myHeroPos.x - EndPosX),2) + math.pow((myHeroPos.y - EndPosY),2) + math.pow((myHeroPos.z - EndPosZ),2))

	tChamp = ((distanceChamp / speedChamp) + (delay/1000)) * 1000
	
	
		if tChamp < t and ssec < 3 then
			-- PrintChat("RecallULT") --Debug
			CastSkillShot(_R, EndPosX, EndPosY, EndPosZ)
		end
end		
end)


if Config.recalldraw then
DrawCircle(EndPosX,EndPosY,EndPosZ,25,1,100,0xff00ff00)
end


-- BASE ULT --------------------
OnProcessRecall(function(Object,recallProc)

	if CanUseSpell(myHero,_R) == READY and GetTeam(Object) ~= GetTeam(myHero) and GetCurrentHP(Object) < dmg(Object) and Config.baseult then

	local t = recallProc.totalTime
		
	local myHeroPos = GetOrigin(myHero)
	local spawnPos = enemyBasePos

	distanceSpawn = math.sqrt(math.pow((myHeroPos.x - spawnPos.x),2) + math.pow((myHeroPos.y - spawnPos.y),2) + math.pow((myHeroPos.z - spawnPos.z),2))

	tSpawn = ((distanceSpawn / speedSpawn) + (delay/1000)) * 1000

	tt = t - tSpawn

		if tSpawn < t then
					DelayAction( function()
						-- PrintChat("BASEULT") -- Debug
						CastSkillShot(_R,spawnPos.x,spawnPos.y,spawnPos.z) end ,
						tt)
		end
end		
end)
end)
