require('Inspired')
require('DLib')
-- require('Inspired')

delay(function() 
    notification("ADC MAIN | Lucian loaded. \nBy Noddy", 5000) 
end, 250)

----- Credits to: ilovesona and Deftsu ----------------------------
DelayAction(function ()
        for _, imenu in pairs(menuTable) do
                local submenu = menu.addItem(SubMenu.new(imenu.name))
                for _,subImenu in pairs(imenu) do
                        if subImenu.type == SCRIPT_PARAM_ONOFF then
                                local ggeasy = submenu.addItem(MenuBool.new(subImenu.t, subImenu.value))
                                OnLoop(function(myHero) subImenu.value = ggeasy.getValue() end)
                        elseif subImenu.type == SCRIPT_PARAM_KEYDOWN then
                                local ggeasy = submenu.addItem(MenuKeyBind.new(subImenu.t, subImenu.key))
                                OnLoop(function(myHero) subImenu.key = ggeasy.getValue(true) end)
                        elseif subImenu.type == SCRIPT_PARAM_INFO then
                                submenu.addItem(MenuSeparator.new(subImenu.t))
                        end
                end
        end
        _G.DrawMenu = function ( ... )  end
end, 1000)
------------------------------------------------------------------

local root = menu.addItem(SubMenu.new("ADC MAIN | Lucian"))
local Combo = root.addItem(SubMenu.new("Combo"))
	local useQ = Combo.addItem(MenuBool.new("Use Q",true))
	local useW = Combo.addItem(MenuBool.new("Use W",true))
	local useE = Combo.addItem(MenuBool.new("Use E to mouse",true))
	local useR = Combo.addItem(MenuBool.new("Use R",false))
	local ComboActive = Combo.addItem(MenuKeyBind.new("Combo", 32))
	
local Drawings = root.addItem(SubMenu.new("Drawings"))
	local DrawDMG = Drawings.addItem(MenuBool.new("Draw R damage",true))
	local DrawQex = Drawings.addItem(MenuBool.new("Extended Q range",true))

local Items = root.addItem(SubMenu.new("Items"))
	local useCut = Items.addItem(MenuBool.new("Bilgewater Cutlass",true))
	local useBork = Items.addItem(MenuBool.new("Blade of the Ruined King",true))
	local useGhost = Items.addItem(MenuBool.new("Youmuu's Ghostblade",true))
	local useRedPot = Items.addItem(MenuBool.new("Elixir of Wrath",true))

Passive = 0	

OnLoop (function (myHero)

local myHeroPos = GetOrigin(myHero)
local target = GetCurrentTarget()
local mouse = GetMousePos()

-- Items
local CutBlade = GetItemSlot(myHero,3144)
local bork = GetItemSlot(myHero,3153)
local ghost = GetItemSlot(myHero,3142)
local redpot = GetItemSlot(myHero,2140)

if ComboActive.getValue() then
	if CutBlade >= 1 and ValidTarget(target,550) and useCut.getValue() then
		if CanUseSpell(myHero,GetItemSlot(myHero,3144)) == READY then
			CastTargetSpell(target, GetItemSlot(myHero,3144))
		end	
	elseif bork >= 1 and ValidTarget(target,550) and (GetMaxHP(myHero) / GetCurrentHP(myHero)) >= 1.25 and useBork.getValue() then 
		if CanUseSpell(myHero,GetItemSlot(myHero,3153)) == READY then
			CastTargetSpell(target,GetItemSlot(myHero,3153))
		end
	end

	if ghost >= 1 and ValidTarget(target,550) and useGhost.getValue() then
		if CanUseSpell(myHero,GetItemSlot(myHero,3142)) == READY then
			CastSpell(GetItemSlot(myHero,3142))
		end
	end
	
	if redpot >= 1 and ValidTarget(target,550) and useRedPot.getValue() then
		if CanUseSpell(myHero,GetItemSlot(myHero,2140)) == READY then
			CastSpell(GetItemSlot(myHero,2140))
		end
	end
end

if DrawDMG.getValue() and CanUseSpell(myHero,_R) == READY and ValidTarget(target, 1500) then
	DPS = CalcDamage(myHero,target,(10*GetCastLevel(myHero,_R)+30+(0.25*(GetBaseDamage(myHero) + GetBonusDmg(myHero))) * (7 + (((150*GetCastLevel(myHero,_R)+500) + GetAttackSpeed(myHero)) / (22.4 - 2.49*(GetCastLevel(myHero,_R)))) * ((22.4 - 2.49*(GetCastLevel(myHero,_R))) / 100))),0)
	-- DPS = CalcDamage(myHero,target,(10*GetCastLevel(myHero,_R)+30+(0.25*(GetBaseDamage(myHero) + GetBonusDmg(myHero))))* (7 + (((150*GetCastLevel(myHero,_R)+500) + GetAttackSpeed(myHero)) / (22.4 - 2.49*(GetCastLevel(myHero,_R)))) * ((22.4 - 2.49*(GetCastLevel(myHero,_R))) / 100)),0) 
	DrawDmgOverHpBar(target,GetCurrentHP(target),DPS,0,0xff00ff00)
end

if DrawQex.getValue() then
	DrawCircle(GetOrigin(myHero),1100,0,0,0xffffffff)
end

OnProcessSpell(function(unit, spell)
if unit and unit == myHero and spell then
    if spell.name:lower():find("lucianq") then
		Passive = 1
	elseif spell.name:lower():find("lucianw") then	
		Passive = 1
	elseif spell.name:lower():find("luciane") then	
		Passive = 1	
	elseif spell.name:lower():find("lucianr") then	
		Passive = 1		
	elseif 	spell.name:lower():find("lucianpassiveattack") then
		Passive = 0
	elseif 	spell.name:lower():find("attack") then
		Passive = 0	
	end
end
end)


if ComboActive.getValue() then
---------------------------

----------------------------
if GotBuff(myHero,"lucianpassivebuff") == 1 or Passive == 1 and ValidTarget(target, 500) then
	AttackUnit(target)
elseif GotBuff(myHero,"lucianpassivebuff") == 0 and Passive == 0 then

if CanUseSpell(myHero,_Q) == READY and useQ.getValue() and GotBuff(myHero,"lucianpassivebuff") == 0 then
		if ValidTarget(target, 700) then
			CastTargetSpell(target,_Q)
		end
end	

if CanUseSpell(myHero,_W) == READY and CanUseSpell(myHero,_Q) == ONCOOLDOWN and useW.getValue() and GotBuff(myHero,"lucianpassivebuff") == 0 and Passive == 0 then
	WPred = GetPredictionForPlayer(myHeroPos, target, GetMoveSpeed(target),2000, 150, 650, 50, true, true)
		if ValidTarget(target, GetCastRange(myHero,_W)) and WPred.HitChance == 1 then
			CastSkillShot(_W, WPred.PredPos.x, WPred.PredPos.y, WPred.PredPos.z)
		elseif ValidTarget(target, 500) and WPred.HitChance == 0 then
			CastSkillShot(_W, WPred.PredPos.x, WPred.PredPos.y, WPred.PredPos.z)
		end
end

if CanUseSpell(myHero,_E) == READY and CanUseSpell(myHero,_Q) == ONCOOLDOWN and CanUseSpell(myHero,_W) == ONCOOLDOWN and useE.getValue() and GotBuff(myHero,"lucianpassivebuff") == 0 then
		if ValidTarget(target, 700) then
			CastSkillShot(_E, mouse.x, mouse.y, mouse.z)
		end
end	
end

-- R
if CanUseSpell(myHero,_R) == READY and ValidTarget(target,1400) and useR.getValue() and GetCurrentHP(target) < CalcDamage(myHero,target,(10*GetCastLevel(myHero,_R)+30+(0.25*(GetBaseDamage(myHero) + GetBonusDmg(myHero))) * (7 + (((150*GetCastLevel(myHero,_R)+500) + GetAttackSpeed(myHero)) / (22.4 - 2.49*(GetCastLevel(myHero,_R)))) * ((22.4 - 2.49*(GetCastLevel(myHero,_R))) / 100))),0) then
	local RPred = GetPredictionForPlayer(myHeroPos, target, GetMoveSpeed(target),3500, 250, 1500, 75, true, false)
		if CanUseSpell (myHero,_R) == READY and RPred.HitChance == 1 and not IsInDistance(target, 650) and IsInDistance(target, 1400) and CanUseSpell(myHero,_Q) == ONCOOLDOWN then
			CastSkillShot(_R, RPred.PredPos.x, RPred.PredPos.y, RPred.PredPos.z)
		end
end

end
end)
