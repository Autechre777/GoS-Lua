require('Inspired')
require('Interrupter')
require('Drawings')

Config = scriptConfig("Diana", "The Moonwalker")
Config.addParam("useQ", "Use Q in combo", SCRIPT_PARAM_ONOFF, true)
Config.addParam("useW", "Use W in combo", SCRIPT_PARAM_ONOFF, true)
Config.addParam("useE", "Use E in combo", SCRIPT_PARAM_ONOFF, true)
Config.addParam("useR", "Use R in combo", SCRIPT_PARAM_ONOFF, true)
Config.addParam("ksR", "Use R to killsteal", SCRIPT_PARAM_ONOFF, true)
Config.addParam("combo", "Combo", SCRIPT_PARAM_KEYDOWN, string.byte(" "))
Config.addParam("harass", "Harass", SCRIPT_PARAM_KEYDOWN, string.byte("C"))
Config.addParam("useQh", "Use Q in harass", SCRIPT_PARAM_ONOFF, true)
Config.addParam("useWh", "Use W in harass", SCRIPT_PARAM_ONOFF, true)
Config.addParam("Interrupter", "Use E to interrupt", SCRIPT_PARAM_ONOFF, true)
--Config.addParam("escape", "Escape to mouse position", SCRIPT_PARAM_KEYDOWN, string.byte("A"))

--Config.addParam("gapW", "Use W agains gapcloser", SCRIPT_PARAM_ONOFF, true)
--Config.addParam("gapE", "Use E agains gapcloser", SCRIPT_PARAM_ONOFF, true)

--Config.addParam("DrawQ", "Draw Q range", SCRIPT_PARAM_ONOFF, true)
--Config.addParam("DrawW", "Draw W range", SCRIPT_PARAM_ONOFF, false)
--Config.addParam("DrawE", "Draw E range", SCRIPT_PARAM_ONOFF, false)
--Configu.addParam("DrawR", "Draw R range", SCRIPT_PARAM_ONOFF, false)

Config.addParam("DrawDMG", "Draw damage", SCRIPT_PARAM_ONOFF, true)

OnLoop(function(myHero)


local myHeroPos = GetOrigin(myHero)
local target = GetCurrentTarget()



-- Drawings


-- DMG Drawings

	if ValidTarget(target) and Config.DrawDMG then	
-- QWR
if CanUseSpell(myHero,_Q) == READY and CanUseSpell(myHero,_W) == READY and CanUseSpell(myHero,_R) == READY then 
local trueDMG = CalcDamage(myHero, target, 0, (60*GetCastLevel(myHero,_R)+40+(0.6*(GetBonusAP(myHero))))) + CalcDamage(myHero, target, 0, (35*GetCastLevel(myHero,_Q)+25+(0.7*(GetBonusAP(myHero))))) + CalcDamage(myHero, target, 0, (36*GetCastLevel(myHero,_W)+30+(0.6*(GetBonusAP(myHero)))))
		DrawDmgOverHpBar(target,GetCurrentHP(target),trueDMG,0,0xff00ff00)
		end
-- QW		
if CanUseSpell(myHero,_Q) == READY and CanUseSpell(myHero,_W) == READY then 
local trueDMG = CalcDamage(myHero, target, 0, (35*GetCastLevel(myHero,_Q)+25+(0.7*(GetBonusAP(myHero))))) + CalcDamage(myHero, target, 0, (36*GetCastLevel(myHero,_W)+30+(0.6*(GetBonusAP(myHero)))))
		DrawDmgOverHpBar(target,GetCurrentHP(target),trueDMG,0,0xff00ff00)
		end		
-- Q		
if CanUseSpell(myHero,_Q) == READY then 
local trueDMG = CalcDamage(myHero, target, 0, (35*GetCastLevel(myHero,_Q)+25+(0.7*(GetBonusAP(myHero)))))
		DrawDmgOverHpBar(target,GetCurrentHP(target),trueDMG,0,0xff00ff00)
		end
-- W
if CanUseSpell(myHero,_W) == READY then 
local trueDMG = CalcDamage(myHero, target, 0, (36*GetCastLevel(myHero,_W)+30+(0.6*(GetBonusAP(myHero)))))
		DrawDmgOverHpBar(target,GetCurrentHP(target),trueDMG,0,0xff00ff00)
		end	
-- R
if CanUseSpell(myHero,_R) == READY then 
local trueDMG = CalcDamage(myHero, target, 0, (60*GetCastLevel(myHero,_R)+40+(0.6*(GetBonusAP(myHero)))))
		DrawDmgOverHpBar(target,GetCurrentHP(target),trueDMG,0,0xff00ff00)
		end	
-- RQ
if CanUseSpell(myHero,_Q) == READY and CanUseSpell(myHero,_R) == READY then 
local trueDMG = CalcDamage(myHero, target, 0, (60*GetCastLevel(myHero,_R)+40+(0.6*(GetBonusAP(myHero))))) + CalcDamage(myHero, target, 0, (35*GetCastLevel(myHero,_Q)+25+(0.7*(GetBonusAP(myHero)))))
		DrawDmgOverHpBar(target,GetCurrentHP(target),trueDMG,0,0xff00ff00)
		end	
-- RW	
if CanUseSpell(myHero,_W) == READY and CanUseSpell(myHero,_R) == READY then 
local trueDMG = CalcDamage(myHero, target, 0, (60*GetCastLevel(myHero,_R)+40+(0.6*(GetBonusAP(myHero))))) + CalcDamage(myHero, target, 0, (36*GetCastLevel(myHero,_W)+30+(0.6*(GetBonusAP(myHero)))))
		DrawDmgOverHpBar(target,GetCurrentHP(target),trueDMG,0,0xff00ff00)
		end		
	end

-- Interrupter
if Config.Interrupter then
addInterrupterCallback(function(target)
  if IsInDistance(target, GetCastRange(myHero,_E)) and CanUseSpell(myHero,_E) == READY then
    CastSpell(_E)
  end 
end)	
end
	
-- Escape

--	if Config.escape then
--		if CanUseSpell(myHero,_Q) == READY and CanUseSpell(myHero,_R) == READY then
--			local mymouse = GetMousePos()
--			CastSkillShot(_Q,mymouse.x,mymouse.y,mymouse.z)
--			CastTargetSpell(_R,mymouse.x,mymouse.y,mymouse.z)
--
--			elseif CanUseSpell(myHero,_R) == READY and CanUseSpell(myHero,_Q) == NOTAVAILABLE then
--				CastTargetSpell(_R,mymouse.x,mymouse.y,mymouse.z)
--
--		end
--	end
-- Harass
if Config.harass then
	local mymouse = GetMousePos()
	MoveToXYZ(mymouse)
	if ValidTarget(target, 1200) then
	AttackUnit(target)
	-- Q
						if CanUseSpell(myHero, _Q) == READY and Config.useQh then

							local QPred = GetPredictionForPlayer(myHeroPos, target, GetMoveSpeed(target),1670, 250, 830, 150, false, true)

							if QPred.HitChance == 1 then
								CastSkillShot(_Q, QPred.PredPos.x, QPred.PredPos.y, QPred.PredPos.z)
							end
						end
-- W
						if ValidTarget(target, 200) and Config.useWh then
							CastSpell(_W)
						end
	end					
	end

if ValidTarget(target, 1250) then


-- Anti Gapcloser

--	if Config.gapW and CanUseSpell(myHero,_W) == READY then
--		AddGapcloseEvent(_W, 200, false)
--	end

--	if Config.gapE and CanUseSpell(myHero,_E) == READY then
--		AddGapcloseEvent(_E, 250, false)
--	end


		if Config.combo then
-- RQ-Combo 2.0
	    	if CanUseSpell(myHero, _R) == READY and CanUseSpell(myHero, _Q) == READY and Config.useQ and Config.useR then

					QPred = GetPredictionForPlayer(myHeroPos, target, GetMoveSpeed(target),1670, 250, 830, 150, false, true)

						if QPred.HitChance == 1 and CanUseSpell(myHero, _Q) == READY and Config.useQ then
							CastSkillShot(_Q, QPred.PredPos.x, QPred.PredPos.y, QPred.PredPos.z)
								if ValidTarget(target, GetCastRange(myHero, _R)) then
									CastTargetSpell(target,_R)
								end
						end
			end
		

-- RQ-Combo
--	    	if CanUseSpell(myHero, _R) == READY and CanUseSpell(myHero, _Q) == READY and Config.useR then
--
--				if ValidTarget(target, GetCastRange(myHero, _R)) then
--					CastTargetSpell(target,_R)
--					QPred = GetPredictionForPlayer(myHeroPos, target, GetMoveSpeed(target),1900, 250, 830, 150, false, true)
--						if QPred.HitChance == 1 and CanUseSpell(myHero, _Q) == READY and Config.useQ then
--							CastSkillShot(_Q, QPred.PredPos.x, QPred.PredPos.y, QPred.PredPos.z)
--						end
--				end
--			end

-- Basic Combo
-- Q
						if CanUseSpell(myHero, _Q) == READY and Config.useQ then

							local QPred = GetPredictionForPlayer(myHeroPos, target, GetMoveSpeed(target),1670, 250, 830, 150, false, true)

							if QPred.HitChance == 1 then
								CastSkillShot(_Q, QPred.PredPos.x, QPred.PredPos.y, QPred.PredPos.z)
							end
						end
-- W
						if ValidTarget(target, 200) and Config.useW then
							CastSpell(_W)
						end
-- E (Simple Logic)
						if CanUseSpell(myHero, _E) == READY and not IsInDistance(target, 150) and IsInDistance(target, 245) and Config.useE then
							CastSpell(_E)
						end
-- R (Simple Logic)
						if CanUseSpell(myHero,_R) == READY and GotBuff(target,"dianamoonlight") >= 1 and ValidTarget(target, GetCastRange(myHero,_R)) and Config.useR then
							CastTargetSpell(target,_R)
						end
		end

-- R KS
						if CanUseSpell(myHero,_R) == READY and ValidTarget(target, GetCastRange(myHero,_R)) and GetCurrentHP(target) < CalcDamage(myHero, target, 0, (60*GetCastLevel(myHero,_R)+40+(0.6*(GetBonusAP(myHero))))) and Config.ksR then
							CastTargetSpell(target,_R)
						end
	
	end
	end)
