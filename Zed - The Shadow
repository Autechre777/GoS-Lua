require('Inspired')
require('IAC')

-- Creditis to:
-- Zypppy
-- Deftsu

Config = scriptConfig("Zed", "Zed - The Shadow")
Config.addParam("ksR", "Use R to killsteal", SCRIPT_PARAM_ONOFF, true)
Config.addParam("AutoE", "Use Auto-E", SCRIPT_PARAM_ONOFF, true)
Config.addParam("Combo", "Combo", SCRIPT_PARAM_KEYDOWN, string.byte(" "))
Config.addParam("useW", "Use W", SCRIPT_PARAM_ONOFF, true)
Config.addParam("useQ", "Use Q", SCRIPT_PARAM_ONOFF, true)
Config.addParam("useE", "Use E", SCRIPT_PARAM_ONOFF, true)
Config.addParam("gabW", "Use W to gapclose", SCRIPT_PARAM_ONOFF, true)

DrawingsConfig = scriptConfig("Zed", "Drawings")
DrawingsConfig.addParam("DrawQ","Draw Q", SCRIPT_PARAM_ONOFF, true)
DrawingsConfig.addParam("DrawW","Draw W", SCRIPT_PARAM_ONOFF, true)
DrawingsConfig.addParam("DrawE","Draw E", SCRIPT_PARAM_ONOFF, true)
DrawingsConfig.addParam("DrawR","Draw R", SCRIPT_PARAM_ONOFF, true)
DrawingsConfig.addParam("DrawWShadow","W - Shadow Drawings", SCRIPT_PARAM_ONOFF, true)
DrawingsConfig.addParam("DrawRShadow","R - Shadow Drawings", SCRIPT_PARAM_ONOFF, true)
DrawingsConfig.addParam("DrawDMG","DrawDmgOverHpBar", SCRIPT_PARAM_ONOFF, true)


myIAC = IAC()
global_ticks = 0
	WPosx = 1
	WPosy = 1
	WPosz = 1
	
	RPosx = 1
	RPosy = 1
	RPosz = 1
	
OnLoop (function(myHero)

local myHeroPos = GetOrigin(myHero)
local target = GetCurrentTarget()
local AD = GetBaseDamage(myHero) + GetBonusDmg(myHero)
Killsteal()
Drawings()

-- R DMG Calc 
	USER = KeyIsDown(82)
	if USER == true then
		StartHP = GetCurrentHP(target)
		-- ArmorTarget = GetArmor(target)
		-- ArmorA = (100/(100+GetArmor(target)))-1
		-- Reduction = math.sqrt(math.pow(ArmorA,2)) + 1
		-- PrintChat("Enemy Starting HP: ".. StartHP)
		-- AD = GetBaseDamage(myHero) + GetBonusDmg(myHero)
		-- PrintChat("Lux Armor: ".. ArmorTarget)
		-- PrintChat("Lux DMG Reduction: ".. Reduction)
		-- PrintChat("AD: ".. AD)
		-- PrintChat("DPS: ".. DPS)
		-- PrintChat("trueDMGr: "..trueDMGr)
	end


	
	EndHP = GetCurrentHP(target)
if DrawingsConfig.DrawDMG then
if CanUseSpell(myHero,_R) == READY then
	DrawDmgOverHpBar(target,GetCurrentHP(target),trueDMGr,0,0xff00ff00)
	
elseif GotBuff(target,"zedulttargetmark") == 1 then
	ArmorTarget = GetArmor(target)
	ArmorA = (100/(100+GetArmor(target)))-1
	Reduction = math.sqrt(math.pow(ArmorA,2)) + 1
	extraDMG = StartHP - EndHP
	MarkDMG = CalcDamage(myHero, target, 0, ((0.15*GetCastLevel(myHero,_R) + 0.05) * (Reduction * extraDMG)) + (GetBaseDamage(myHero) + GetBonusDmg(myHero)))
	DrawDmgOverHpBar(target,GetCurrentHP(target),MarkDMG,0,0xff00ff00)
		
	-- PrintChat("Mark DMG: ".. MarkDMG)
else
	DrawDmgOverHpBar(target,GetCurrentHP(target),DPS,0,0xff00ff00)
end	
end
-- Auto E
if Config.AutoE then
	if ValidTarget(target, 290) and Config.AutoE then
		CastSpell(_E)
	end
-- W _E	
	if CanUseSpell(myHero,_E) == READY and Config.AutoE then
		local wEPred = GetPredictionForPlayer(vWPos,target,GetMoveSpeed(target),1700,250,GetCastRange(myHero,_E),0,false,false)
			if CanUseSpell(myHero, _E) == READY and wEPred.HitChance == 1 then
				CastSpell(_E)
			end
	end
-- R _E	
	if CanUseSpell(myHero,_E) == READY and Config.AutoE then
		local rEPred = GetPredictionForPlayer(vRPos,target,GetMoveSpeed(target),1700,250,GetCastRange(myHero,_E),0,false,false)
			if CanUseSpell(myHero, _E) == READY and rEPred.HitChance == 1 then
				CastSpell(_E)
			end
	end	
end	
Ticker1 = GetTickCount()

-- W Tracker
OnProcessSpell(function(unit, spell)
  if unit and unit == myHero and spell then
    if spell.name:lower():find("zedshadowdash") then
	WPosx = spell.endPos.x
	WPosy = spell.endPos.y
	WPosz = spell.endPos.z
	vWPos = Vector(spell.endPos.x,spell.endPos.y,spell.endPos.z)
	-- WPos = math.sqrt(math.pow((WPosx),2) + math.pow((WPosx),2) + math.pow((WPosx),2))
	elseif spell.name:lower():find("zedw2") then
	WPosx = spell.startPos.x
	WPosy = spell.startPos.y
	WPosz = spell.startPos.z
	vWPos = Vector(spell.startPos.x,spell.startPos.y,spell.startPos.z)
	-- WPos = math.sqrt(math.pow((WPosx),2) + math.pow((WPosx),2) + math.pow((WPosx),2))
	elseif CanUseSpell(myHero,_W) == ONCOOLDOWN then
	
	WPosx = 1
	WPosy = 1
	WPosz = 1
	vWPos = Vector(WPosx,WPosy,WPosz)
	end  
  end
end)

-- R Tracker
OnProcessSpell(function(unit, spell)
  if unit and unit == myHero and spell then
    if spell.name:lower():find("zedult") then
	RPosx = spell.startPos.x
	RPosy = spell.startPos.y
	RPosz = spell.startPos.z
	vRPos = Vector(RPosx,RPosy,spell.RPosz)
	
	elseif spell.name:lower():find("zedr2") then
	RPosx = spell.startPos.x
	RPosy = spell.startPos.y
	RPosz = spell.startPos.z
	vRPos = Vector(RPosx,RPosy,RPosz)
	
	elseif CanUseSpell(myHero,_R) == ONCOOLDOWN then
	
	RPosx = 1
	RPosy = 1
	RPosz = 1
	vRPos = Vector(RPosx,RPosy,RPosz)
	end  
  end
end)

-- Draw R Shadow
if DrawingsConfig.DrawRShadow then
if RPosx > 1 and CanUseSpell(myHero,_Q) == READY and CanUseSpell(myHero,_E) == READY then
	DrawCircle(RPosx,RPosy,RPosz,GetCastRange(myHero,_Q),1,50,0xff0ffff0)
	DrawCircle(RPosx,RPosy,RPosz,GetCastRange(myHero,_E),1,50,0xff0ffff0)
	DrawCircle(RPosx,RPosy,RPosz,100,1,50,0xff0ffff0)
elseif RPosx > 1 and CanUseSpell(myHero,_Q) == READY then
	DrawCircle(RPosx,RPosy,RPosz,GetCastRange(myHero,_Q),1,50,0xff0ffff0)
	DrawCircle(RPosx,RPosy,RPosz,100,1,50,0xff0ffff0)
elseif RPosx > 1 and CanUseSpell(myHero,_E) == READY then
	DrawCircle(RPosx,RPosy,RPosz,GetCastRange(myHero,_E),1,50,0xff0ffff0)
	DrawCircle(RPosx,RPosy,RPosz,100,1,50,0xff0ffff0)	
elseif RPosx > 1 then
	DrawCircle(RPosx,RPosy,RPosz,100,1,50,0xff0ffff0)
elseif RPosx == 1 then
	-- DrawCircle(RPosx,RPosy,RPosz,50,1,50,0xff0ffff0)	
end	
end

-- Draw W Shadow
if DrawingsConfig.DrawWShadow then
if WPosx > 1 and CanUseSpell(myHero,_Q) == READY and CanUseSpell(myHero,_E) == READY then
	DrawCircle(WPosx,WPosy,WPosz,GetCastRange(myHero,_Q),1,50,0xff00ff00)
	DrawCircle(WPosx,WPosy,WPosz,GetCastRange(myHero,_E),1,50,0xff00ff00)
	DrawCircle(WPosx,WPosy,WPosz,100,1,50,0xff00ff00)
elseif WPosx > 1 and CanUseSpell(myHero,_Q) == READY then
	DrawCircle(WPosx,WPosy,WPosz,GetCastRange(myHero,_Q),1,50,0xff00ff00)
	DrawCircle(WPosx,WPosy,WPosz,100,1,50,0xff00ff00)
elseif WPosx > 1 and CanUseSpell(myHero,_E) == READY then
	DrawCircle(WPosx,WPosy,WPosz,GetCastRange(myHero,_E),1,50,0xff00ff00)
	DrawCircle(WPosx,WPosy,WPosz,100,1,50,0xff00ff00)	
elseif WPosx > 1 then
	DrawCircle(WPosx,WPosy,WPosz,100,1,50,0xff00ff00)
elseif WPosx == 1 then
	-- DrawCircle(WPosx,WPosy,WPosz,100,1,50,0xff00ff00)	
end			
end

-- Combo
if Config.Combo then

	if ValidTarget(target, 2000) then
	Ticker = GetTickCount()	

-- W Gab Combo
if Config.useW and Config.gabW then

-- W
	if CanUseSpell(myHero,_W) == READY and Config.useW and Config.gabW then
		local WPred = GetPredictionForPlayer(myHeroPos,target,GetMoveSpeed(target),300,300,GetCastRange(myHero,_W),250,false,false)
            if CanUseSpell(myHero, _W) == READY and WPred.HitChance == 1 and ValidTarget(target, GetCastRange(myHero,_W)) then
				CastSkillShot(_W,WPred.PredPos.x,WPred.PredPos.y,WPred.PredPos.z)
				end
			end
-- W _Q	
	if CanUseSpell(myHero,_Q) == READY and Config.useQ and Config.useW then
		local wQPred = GetPredictionForPlayer(vWPos,target,GetMoveSpeed(target),1700,250,GetCastRange(myHero,_Q),50,false,false)
            if CanUseSpell(myHero, _Q) == READY and wQPred.HitChance == 1 then
                CastSkillShot(_Q,wQPred.PredPos.x,wQPred.PredPos.y,wQPred.PredPos.z)
		end     
	end	

-- R _Q	
	if CanUseSpell(myHero,_Q) == READY and Config.useQ then
		local rQPred = GetPredictionForPlayer(vRPos,target,GetMoveSpeed(target),1700,250,GetCastRange(myHero,_Q),50,false,false)
            if CanUseSpell(myHero, _Q) == READY and rQPred.HitChance == 1 then
                CastSkillShot(_Q,rQPred.PredPos.x,rQPred.PredPos.y,rQPred.PredPos.z)
		end     
	end		
			
-- Q
	if CanUseSpell(myHero,_Q) == READY and Config.useQ then
		local QPred = GetPredictionForPlayer(myHeroPos,target,GetMoveSpeed(target),1700,250,GetCastRange(myHero,_Q),50,false,false)
            if CanUseSpell(myHero, _Q) == READY and QPred.HitChance == 1 and ValidTarget(target, GetCastRange(myHero,_Q)) then
                CastSkillShot(_Q,QPred.PredPos.x,QPred.PredPos.y,QPred.PredPos.z)
		end     
	end

-- W _E	
	if CanUseSpell(myHero,_E) == READY and Config.useE and Config.useW then
		local wEPred = GetPredictionForPlayer(vWPos,target,GetMoveSpeed(target),1700,250,GetCastRange(myHero,_E),0,false,false)
			if CanUseSpell(myHero, _E) == READY and wEPred.HitChance == 1 then
				CastSpell(_E)
			end
	end	

-- R _E	
	if CanUseSpell(myHero,_E) == READY and Config.useE then
		local rEPred = GetPredictionForPlayer(vRPos,target,GetMoveSpeed(target),1700,250,GetCastRange(myHero,_E),0,false,false)
			if CanUseSpell(myHero, _E) == READY and rEPred.HitChance == 1 then
				CastSpell(_E)
			end
	end	
	
-- E
	if CanUseSpell(myHero,_E) == READY and ValidTarget(target, 200) and Config.useE then
		CastSpell(_E)
	end
end		
										
-- W Once Combo
if Config.useW and not Config.gabW then

-- W with ticker
	if CanUseSpell(myHero,_W) == READY and GotBuff(myHero,"zedwhandler") == 0 and Config.useW then
		 local WPred = GetPredictionForPlayer(myHeroPos,target,GetMoveSpeed(target),300,300,GetCastRange(myHero,_W),250,false,false)

		 if (global_ticks + 5000) < Ticker then
            if CanUseSpell(myHero, _W) == READY and WPred.HitChance == 1 and ValidTarget(target, GetCastRange(myHero,_W)) and Config.useW then
				CastSkillShot(_W,WPred.PredPos.x,WPred.PredPos.y,WPred.PredPos.z)

						global_ticks = Ticker
						-- PrintChat("Test!")
				end
			end
	end	
	
-- Q
	if CanUseSpell(myHero,_Q) == READY and Config.useQ then
		local QPred = GetPredictionForPlayer(myHeroPos,target,GetMoveSpeed(target),1700,250,GetCastRange(myHero,_Q),50,false,false)
            if CanUseSpell(myHero, _Q) == READY and QPred.HitChance == 1 and ValidTarget(target, GetCastRange(myHero,_Q)) then
                CastSkillShot(_Q,QPred.PredPos.x,QPred.PredPos.y,QPred.PredPos.z)
		end     
	end
	
-- W _Q	
	if CanUseSpell(myHero,_Q) == READY and Config.useQ and Config.useW then
		local wQPred = GetPredictionForPlayer(vWPos,target,GetMoveSpeed(target),1700,250,GetCastRange(myHero,_Q),50,false,false)
            if CanUseSpell(myHero, _Q) == READY and wQPred.HitChance == 1 then
                CastSkillShot(_Q,wQPred.PredPos.x,wQPred.PredPos.y,wQPred.PredPos.z)
		end     
	end

-- R _Q	
	if CanUseSpell(myHero,_Q) == READY and Config.useQ then
		local rQPred = GetPredictionForPlayer(vRPos,target,GetMoveSpeed(target),1700,250,GetCastRange(myHero,_Q),50,false,false)
            if CanUseSpell(myHero, _Q) == READY and rQPred.HitChance == 1 then
                CastSkillShot(_Q,rQPred.PredPos.x,rQPred.PredPos.y,rQPred.PredPos.z)
		end     
	end	
	
-- W _E
	if CanUseSpell(myHero,_E) == READY and Config.useE and Config.useW then
		local wEPred = GetPredictionForPlayer(vWPos,target,GetMoveSpeed(target),1700,250,GetCastRange(myHero,_E),0,false,false)
			if CanUseSpell(myHero, _E) == READY and wEPred.HitChance == 1 then
				CastSpell(_E)
			end
	end

-- R _E	
	if CanUseSpell(myHero,_E) == READY and Config.useE then
		local rEPred = GetPredictionForPlayer(vRPos,target,GetMoveSpeed(target),1700,250,GetCastRange(myHero,_E),0,false,false)
			if CanUseSpell(myHero, _E) == READY and rEPred.HitChance == 1 then
				CastSpell(_E)
			end
	end		
	
-- E
	if CanUseSpell(myHero,_E) == READY and ValidTarget(target, 200) and Config.useE then
		CastSpell(_E)
	end
end

-- Manual W
if not Config.useW and not Config.gabW then

-- Q
	if CanUseSpell(myHero,_Q) == READY and Config.useQ then
		local QPred = GetPredictionForPlayer(myHeroPos,target,GetMoveSpeed(target),1700,250,GetCastRange(myHero,_Q),50,false,false)
            if CanUseSpell(myHero, _Q) == READY and QPred.HitChance == 1 and ValidTarget(target, GetCastRange(myHero,_Q)) then
                CastSkillShot(_Q,QPred.PredPos.x,QPred.PredPos.y,QPred.PredPos.z)
		end     
	end
	
-- W _Q	
	if CanUseSpell(myHero,_Q) == READY and Config.useQ then
		local wQPred = GetPredictionForPlayer(vWPos,target,GetMoveSpeed(target),1700,250,GetCastRange(myHero,_Q),50,false,false)
            if CanUseSpell(myHero, _Q) == READY and wQPred.HitChance == 1 then
                CastSkillShot(_Q,wQPred.PredPos.x,wQPred.PredPos.y,wQPred.PredPos.z)
		end     
	end

-- R _Q	
	if CanUseSpell(myHero,_Q) == READY and Config.useQ then
		local rQPred = GetPredictionForPlayer(vRPos,target,GetMoveSpeed(target),1700,250,GetCastRange(myHero,_Q),50,false,false)
            if CanUseSpell(myHero, _Q) == READY and rQPred.HitChance == 1 then
                CastSkillShot(_Q,rQPred.PredPos.x,rQPred.PredPos.y,rQPred.PredPos.z)
		end     
	end	
	
-- W _E
	if CanUseSpell(myHero,_E) == READY and Config.useE then
		local wEPred = GetPredictionForPlayer(vWPos,target,GetMoveSpeed(target),1700,250,GetCastRange(myHero,_E),0,false,false)
			if CanUseSpell(myHero, _E) == READY and wEPred.HitChance == 1 then
				CastSpell(_E)
			end
	end
	
-- E
	if CanUseSpell(myHero,_E) == READY and ValidTarget(target, 200) and Config.useE then
		CastSpell(_E)
	end

-- R _E	
	if CanUseSpell(myHero,_E) == READY and Config.useE then
		local rEPred = GetPredictionForPlayer(vRPos,target,GetMoveSpeed(target),1700,250,GetCastRange(myHero,_E),0,false,false)
			if CanUseSpell(myHero, _E) == READY and rEPred.HitChance == 1 then
				CastSpell(_E)
			end
	end		
	
end	
end
end
end)

function Killsteal()
       for i,enemy in pairs(GetEnemyHeroes()) do
			
			if CanUseSpell(myHero,_Q) == READY then 
				qDMG = CalcDamage(myHero, enemy, 0, (24*GetCastLevel(myHero,_Q)+21+(0.6*(GetBaseDamage(myHero) + GetBonusDmg(myHero)))))
				qDMGpre = (24*GetCastLevel(myHero,_Q)+21+(0.6*(GetBaseDamage(myHero) + GetBonusDmg(myHero))))
			else qDMG = 0
				 qDMGpre = 0
			end
			
			if CanUseSpell(myHero,_E) == READY then 
				eDMG = CalcDamage(myHero, enemy, 0, (30*GetCastLevel(myHero,_E)+30+(0.8*(GetBaseDamage(myHero) + GetBonusDmg(myHero)))))
				eDMGpre = (30*GetCastLevel(myHero,_E)+30+(0.8*(GetBaseDamage(myHero) + GetBonusDmg(myHero))))
			else eDMG = 0
				 eDMGpre = 0
			end
			
			DPS = qDMG + eDMG
			DPSpre = qDMGpre + eDMGpre
			
			if CanUseSpell(myHero,_R) == READY then
				AADMG = CalcDamage(myHero, enemy, 0, (GetBaseDamage(myHero) + GetBonusDmg(myHero)))
				trueDMGr = CalcDamage(myHero, enemy, 0, (((0.15*GetCastLevel(myHero,_R) + 0.05) * DPSpre ) + (GetBaseDamage(myHero) + GetBonusDmg(myHero)) + AADMG)) + DPSpre
			else trueDMGr = 0
			end
			
            if CanUseSpell(myHero, _R) == READY and ValidTarget(enemy,GetCastRange(myHero,_R)) and Config.ksR and GetCurrentHP(enemy) < trueDMGr then
            CastTargetSpell(enemy, _R)
			StartHP = GetCurrentHP(enemy)
            end
      end
end

function Drawings()
myHeroPos = GetOrigin(myHero)
if CanUseSpell(myHero, _Q) == READY and DrawingsConfig.DrawQ then DrawCircle(myHeroPos.x,myHeroPos.y,myHeroPos.z,GetCastRange(myHero,_Q),1,100,0xff00ff00)
	elseif CanUseSpell(myHero, _Q) == ONCOOLDOWN and DrawingsConfig.DrawQ then DrawCircle(myHeroPos.x,myHeroPos.y,myHeroPos.z,GetCastRange(myHero,_Q),1,100,0xffff0000)
	end
if CanUseSpell(myHero, _W) == READY and DrawingsConfig.DrawW then DrawCircle(myHeroPos.x,myHeroPos.y,myHeroPos.z,GetCastRange(myHero,_W),1,100,0xff00ff00)
	elseif CanUseSpell(myHero, _W) == ONCOOLDOWN and DrawingsConfig.DrawW then DrawCircle(myHeroPos.x,myHeroPos.y,myHeroPos.z,GetCastRange(myHero,_W),1,100,0xffff0000)
	end
if CanUseSpell(myHero, _E) == READY and DrawingsConfig.DrawE then DrawCircle(myHeroPos.x,myHeroPos.y,myHeroPos.z,GetCastRange(myHero,_E),1,100,0xff00ff00) 
	elseif CanUseSpell(myHero, _E) == ONCOOLDOWN and DrawingsConfig.DrawE then DrawCircle(myHeroPos.x,myHeroPos.y,myHeroPos.z,GetCastRange(myHero,_E),1,100,0xffff0000)
	end
if CanUseSpell(myHero, _R) == READY and DrawingsConfig.DrawR then DrawCircle(myHeroPos.x,myHeroPos.y,myHeroPos.z,GetCastRange(myHero,_R),2,100,0xff00ff00) 
	elseif CanUseSpell(myHero, _R) == ONCOOLDOWN and DrawingsConfig.DrawR then DrawCircle(myHeroPos.x,myHeroPos.y,myHeroPos.z,GetCastRange(myHero,_R),1,100,0xffff0000)
	end
end
